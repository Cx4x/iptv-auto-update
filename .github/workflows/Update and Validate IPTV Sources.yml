name: Update and Convert IPTV Sources

on:
  schedule:
    # 每天凌晨 3 点运行
    - cron: '0 3 * * *'
  workflow_dispatch: # 手动触发工作流

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      # 检查出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 拉取最新直播源
      - name: Fetch latest IPTV sources
        run: |
          echo "Fetching the latest IPTV sources..."
          mkdir -p data
          curl -o data/iptv.m3u https://iptv-org.github.io/iptv/index.m3u

      # 自动创建分组文件夹并筛选节目
      - name: Create groups and filter channels
        run: |
          echo "Creating groups and filtering channels..."
          mkdir -p data/groups
          
          # 定义分组名称和关键词
          cat <<EOF > group_config.txt
          首选直播源,首选|主推
          IPV6央卫数字,IPV6|中央|数字
          IPV4地方频道,IPV4|地方
          直播中国,中国|直播
          代理源(180),代理|180
          AKTV(61),AKTV|61
          四季TV(62),四季TV|62
          HLS-TV(18),HLS|18
          JDSP源(23),JDSP|23
          测试直播源,测试|实验
          动作片1224,动作片|1224
          科幻片1224,科幻|1224
          恐怖片1224,恐怖片|1224
          战争片1224,战争片|1224
          台湾地区FM,台湾|FM
          大陆地区FM,大陆|FM
          国家级FM,国家级|FM
          EOF

          # 遍历分组文件创建文件夹并筛选内容
          while IFS= read -r group; do
            group_name=$(echo "$group" | cut -d ',' -f1)
            keywords=$(echo "$group" | cut -d ',' -f2)
            mkdir -p "data/groups/$group_name"
            grep -E "($keywords)" -A1 data/iptv.m3u > "data/groups/$group_name/${group_name}.m3u"
          done < group_config.txt

      # 验证直播源链接有效性
      - name: Validate live stream links
        run: |
          echo "Validating live stream links..."
          mkdir -p data/valid
          > data/valid/working_links.txt
          > data/valid/invalid_links.txt

          # 禁用退出状态码错误中断
          set +e
          find data/groups -name "*.m3u" | while read -r group_file; do
            group_name=$(basename "$(dirname "$group_file")")
            mkdir -p "data/valid/$group_name"
            
            # 验证每个分组的链接
            awk '/http/{print $0}' "$group_file" | while read -r link; do
              status=$(curl -s -o /dev/null -w "%{http_code}" --max-time 3 "$link" || true)
              if [ "$status" -eq 200 ]; then
                echo "$link" >> "data/valid/$group_name/working_links.txt"
              else
                echo "$link" >> "data/valid/$group_name/invalid_links.txt"
              fi
            done
          done

          # 恢复默认错误中断行为
          set -e

      # 转换 M3U 到 TXT 格式
      - name: Convert M3U to TXT
        run: |
          echo "Converting M3U files to TXT format..."
          mkdir -p data/valid/groups/txt

          find data/valid -name "working_links.txt" | while read -r valid_file; do
            group_name=$(basename "$(dirname "$valid_file")")
            output_file="data/valid/groups/txt/${group_name}.txt"
            echo "$group_name,#genre#" > "$output_file"
            
            awk '{print "ChannelName," $0}' "$valid_file" >> "$output_file"
          done

          # 合并所有 TXT 文件
          cat data/valid/groups/txt/*.txt > data/valid/valid_iptv.txt

      # 提交更新到仓库
      - name: Commit and push updates
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Updated and converted IPTV sources to TXT format [skip ci]"
          git push
